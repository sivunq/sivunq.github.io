{"version":3,"file":"component---src-templates-blog-post-tsx-6904a87858e1c5e577b2.js","mappings":"kOAA0B,IAGpBA,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,MAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAM,UAyBX,OAzBWD,EACZE,kBAAA,WACE,MAAM,OAACC,GAAWC,KAAKC,MAEpBC,EAAmB,iCAAiCH,EAErDI,OAAOC,cAAgB,KACrBJ,KAAKK,KAAKC,IAAMJ,EAChBF,KAAKK,KAAKE,WAAaR,GAExB,WACC,MAAMS,EAAIC,SACJC,EAAIF,EAAEG,cAAc,UAC1BD,EAAEE,IAAM,qCACRF,EAAEG,aAAa,kBAAmB,IAAIC,OACrCN,EAAEO,MAAQP,EAAEQ,MAAMC,YAAYP,EAChC,CANA,EAOL,EAACd,EAEDsB,OAAA,WACE,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKC,GAAG,kBAGd,EAAC7B,CAAA,CAzBW,CAAS4B,EAAAA,WAgCvB,Q,wCCtBA,MAcME,EAAOC,EAAAA,QAAOC,QAAOC,WAAA,CAAAC,YAAA,aAAAC,YAAA,eAAdJ,CAAc,2MAEZK,EAAAA,EAAAA,IAAO,KAClBC,EAAAA,EAAAA,IAAM,KAMOD,EAAAA,EAAAA,IAAO,IAYlBE,EAAQP,EAAAA,QAAOQ,GAAEN,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAATJ,CAAS,mDAEPK,EAAAA,EAAAA,IAAO,IAIjBI,EAAOT,EAAAA,QAAOU,EAACR,WAAA,CAAAC,YAAA,aAAAC,YAAA,eAARJ,CAAQ,sEACNK,EAAAA,EAAAA,IAAO,KAGHA,EAAAA,EAAAA,IAAO,IAGpBM,EAAUX,EAAAA,QAAOY,QAAOV,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAdJ,CAAc,uNAIxBM,EAAAA,EAAAA,KAAO,KAKQD,EAAAA,EAAAA,IAAO,KAMZA,EAAAA,EAAAA,IAAO,KAMvB,MArEiDQ,IAAA,IAAC,KAChDC,GACDD,EAAA,OACChB,EAAAA,cAACE,EAAI,KACHF,EAAAA,cAACU,EAAK,KAAEO,EAAKC,YAAYC,OACzBnB,EAAAA,cAACY,EAAI,KACFK,EAAKC,YAAYE,KAAK,MAAIH,EAAKI,WAAW,aAE7CrB,EAAAA,cAACc,EAAO,CAACQ,wBAAyB,CAAEC,OAAQN,EAAKO,QAEjDxB,EAAAA,cAAA,OAAKyB,UAAU,gB,UCyCnB,MA7CyET,IAG9C,IAH+C,KACxEU,EAAI,SACJC,GACDX,EACC,MAAM,YAAEE,KAAgBD,GAASS,EAAKE,gBAC9BT,MAAOU,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,MAEhCC,GAAcC,EAAAA,EAAAA,IAAmB,CAAEN,aAEzC,OACE3B,EAAAA,cAACkC,EAAAA,EAAM,CACLP,SAAUA,EACVR,MAAOU,EACPM,YAAa,CAAEC,aAAa,IAE5BpC,EAAAA,cAACqC,EAAAA,EAAG,CACFlB,MAAOD,EAAYC,MACnBmB,YAAa,GAAGrB,EAAKI,yBAAyBH,EAAYoB,cAC1DC,MACErB,EAAYsB,MACRtB,EAAYsB,MAAMC,gBAAgBC,MAAMjD,SACxCkD,EAENC,SAAU,mBAAmB1B,EAAYC,QACzC0B,KAAK,UACL1D,IAAK,GAAG2C,UAAgBZ,EAAY4B,OACpCC,KAAI,CACF,CAAEC,SAAU,yBAA0BC,QAAS/B,EAAYE,MAC3D,CAAE4B,SAAU,kBAAmBC,QAAS/B,EAAYgC,WAAUC,QAAAC,EAAAA,EAAAA,IAC1DlC,EAAYmC,MAAQ,IAAIC,IAAIC,IAAC,CAC/BP,SAAU,cACVC,QAASM,SAIdvB,EAAYsB,IAAIE,IAAA,IAAC,MAAE1E,EAAK,IAAE2E,GAAKD,EAAA,OAC9BxD,EAAAA,cAAC0D,EAAAA,GAASC,IAAG,CAACF,IAAKA,EAAKG,MAAO9E,GAC7BkB,EAAAA,cAAC6D,EAAI,CAAC5C,KAAM,CAAEC,iBAAgBD,QAGrCjB,EAAAA,cAAC8D,EAAO,CAAClF,OAAQsC,EAAY4B,Q","sources":["webpack://navdeep-personal-website/./src/components/Comment/index.jsx","webpack://navdeep-personal-website/./src/components/Post/Post.tsx","webpack://navdeep-personal-website/./src/templates/blog-post.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const {pageId } = this.props;\n\t\n\tconst pageCanonicalUrl = \"https://sivunq.github.io/blog/\"+pageId; \n\n      window.disqus_config = () => {\n        this.page.url = pageCanonicalUrl;\n        this.page.identifier = pageId;\n      };\n      (function () {\n        const d = document;\n        const s = d.createElement('script');\n        s.src = 'https://sivunq.disqus.com/embed.js';\n        s.setAttribute('data-timestamp', +new Date());\n        (d.head || d.body).appendChild(s);\n      }());\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"disqus_thread\" />\n      </div>\n    );\n  }\n}\n\nComments.propTypes = {\n  pageId: PropTypes.string.isRequired\n};\n\nexport default Comments;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MarkdownRemark } from \"graphql-types\";\n\nimport Author from \"../Layout/Author\";\nimport Comment from '../Comment';\n\nimport { rhythm, scale } from \"../../utils/typography\";\n\ninterface PostProps {\n  post: MarkdownRemark;\n}\n\nconst Post: React.FunctionComponent<PostProps> = ({\n  post,\n}): React.ReactElement => (\n  <Root>\n    <Title>{post.frontmatter.title}</Title>\n    <Info>\n      {post.frontmatter.date} · {post.timeToRead} min read\n    </Info>\n    <Content dangerouslySetInnerHTML={{ __html: post.html }} />\n\t\n    <div className=\"separator\" />\n  </Root>\n);\n\nconst Root = styled.section`\n  margin: auto;\n  max-width: ${rhythm(28)};\n  ${scale(0.1)}\n\n  .separator {\n    margin: 20px 0px;\n    border: none;\n    text-align: center;\n    font-size: ${rhythm(1)};\n    font-weight: 300;\n\n    &:before {\n      line-height: 1.4;\n      text-indent: 0.6em;\n      letter-spacing: 0.6em;\n      content: \"···\";\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  color: #be2727;\n  margin-top: ${rhythm(1)};\n  margin-bottom: 0;\n`;\n\nconst Info = styled.p`\n  font-size: ${rhythm(0.6)};\n  font-style: italic;\n  display: block;\n  margin-bottom: ${rhythm(1)};\n`;\n\nconst Content = styled.article`\n  .md-figure-caption,\n  .gatsby-resp-image-figcaption {\n    text-align: center;\n    ${scale(-0.2)};\n    font-style: italic;\n  }\n\n  .gatsby-resp-image-background-image {\n    margin-bottom: ${rhythm(0.1)};\n  }\n\n  .video_container {\n    iframe {\n      width: 100%;\n      height: ${rhythm(20)};\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport default Post;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { animated } from \"react-spring\";\nimport { GatsbyLocation } from \"local-types\";\nimport { MarkdownRemark } from \"graphql-types\";\n\nimport Comment from '../components/Comment';\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport Post from \"../components/Post\";\nimport { useSiteMetadata, usePageTransitions } from \"../hooks\";\n\ninterface BlogPostTemplateProps {\n  location: GatsbyLocation;\n  data: {\n    markdownRemark: MarkdownRemark;\n  };\n}\n\nconst BlogPostTemplate: React.FunctionComponent<BlogPostTemplateProps> = ({\n  data,\n  location,\n}): React.ReactElement => {\n  const { frontmatter, ...post } = data.markdownRemark;\n  const { title: siteTitle, siteUrl } = useSiteMetadata();\n\n  const transitions = usePageTransitions({ location });\n  \n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      headerProps={{ showBackNav: true }}\n    >\n      <SEO\n        title={frontmatter.title}\n        description={`${post.timeToRead} min read · ${frontmatter.description}`}\n        image={\n          frontmatter.cover\n            ? frontmatter.cover.childImageSharp.fixed.src\n            : undefined\n        }\n        imageAlt={`Cover photo for ${frontmatter.title}`}\n        type=\"article\"\n        url={`${siteUrl}/blog/${frontmatter.slug}`}\n        meta={[\n          { property: \"article:published_time\", content: frontmatter.date },\n          { property: \"article:section\", content: frontmatter.category },\n          ...(frontmatter.tags || []).map(t => ({\n            property: \"article:tag\",\n            content: t,\n          })),\n        ]}\n      />\n      {transitions.map(({ props, key }) => (\n        <animated.div key={key} style={props}>\n          <Post post={{ frontmatter, ...post }} />\n        </animated.div>\n      ))}\n\t  <Comment pageId={frontmatter.slug} />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        cover {\n          childImageSharp {\n            fixed {\n              src\n            }\n          }\n        }\n        slug\n        description\n        category\n        tags\n      }\n      timeToRead\n    }\n  }\n`;\n"],"names":["Comments","_React$Component","apply","arguments","_inheritsLoose","_proto","prototype","componentDidMount","pageId","this","props","pageCanonicalUrl","window","disqus_config","page","url","identifier","d","document","s","createElement","src","setAttribute","Date","head","body","appendChild","render","React","id","Root","styled","section","withConfig","displayName","componentId","rhythm","scale","Title","h1","Info","p","Content","article","_ref","post","frontmatter","title","date","timeToRead","dangerouslySetInnerHTML","__html","html","className","data","location","markdownRemark","siteTitle","siteUrl","useSiteMetadata","transitions","usePageTransitions","Layout","headerProps","showBackNav","SEO","description","image","cover","childImageSharp","fixed","undefined","imageAlt","type","slug","meta","property","content","category","concat","_toConsumableArray","tags","map","t","_ref2","key","animated","div","style","Post","Comment"],"sourceRoot":""}