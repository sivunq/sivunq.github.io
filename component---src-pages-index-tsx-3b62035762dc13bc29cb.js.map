{"version":3,"sources":["webpack:///./src/components/Home/Intro/Intro.tsx","webpack:///./src/components/Home/ShowcasedPosts/ShowcasedPostsContainer/ShowcasedPostCard/ShowcasedPostCard.tsx","webpack:///./src/components/Home/ShowcasedPosts/ShowcasedPostsContainer/ShowcasedPostsContainer.tsx","webpack:///./src/components/Home/ShowcasedPosts/ShowcasedPosts.tsx","webpack:///./src/components/Home/Home.tsx","webpack:///./src/pages/index.tsx"],"names":["Root","styled","div","device","tablet","HeadingContainer","section","rhythm","PitchContainer","Greeting","h1","scale","SubTitle","h4","Description","p","StyledImage","Image","Intro","author","useSiteMetadata","avatar","useAvatar","width","height","fixed","childImageSharp","alt","name","firstname","title","descriptions","intro","Social","Title","theme","colors","accent","ContentInfo","span","Content","Cover","ShowcasedPostCard","slug","cover","description","date","timeToRead","location","aria-label","to","state","prevPath","pathname","dangerouslySetInnerHTML","__html","slice","h2","PostsContainer","ShowcasedPostsContainer","posts","map","post","key","node","fields","frontmatter","Home","allMarkdownRemark","useStaticQuery","latestPosts","edges","featuredPosts","filter","find","lp","featured","length","ShowcasedPosts","Index","siteTitle","transitions","usePageTransitions","config","gentle","translateX","Layout","props","style"],"mappings":"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","file":"component---src-pages-index-tsx-3b62035762dc13bc29cb.js","sourcesContent":["import React from \"react\";\nimport Image, { FixedObject } from \"gatsby-image\";\nimport styled from \"styled-components\";\n\nimport Social from \"../../Social\";\n\nimport { rhythm, scale } from \"../../../utils/typography\";\nimport { useSiteMetadata, useAvatar } from \"../../../hooks\";\nimport { device } from \"../../../styles/constants\";\n\nconst Intro: React.FunctionComponent<{}> = (): React.ReactElement => {\n  const { author } = useSiteMetadata();\n  const avatar = useAvatar({ width: 150, height: 150 });\n\n  return (\n    <Root>\n      <HeadingContainer>\n        <StyledImage\n          fixed={avatar.childImageSharp.fixed as FixedObject}\n          alt={author.name}\n        />\n        <PitchContainer>\n          <Greeting>Hi, I&apos;m {author.firstname} 👋</Greeting>\n          <SubTitle>{author.title}</SubTitle>\n          <Description>{author.descriptions.intro}</Description>\n        </PitchContainer>\n      </HeadingContainer>\n\t  <strong><i>Have something worthwhile to do with your life, apart from your job. Do something constructive for this world.</i></strong>\n\n\t  <br/>\n      <Social />\n\t  Reach out to me on your favorite social :)\n    </Root>\n  );\n};\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  &:after {\n    margin: 40px 0;\n    content: \"\";\n    width: 100%;\n    border-bottom: 1px solid #ccc;\n    display: block;\n  }\n\n  @media ${device.tablet} {\n    align-items: inherit;\n  }\n`;\n\nconst HeadingContainer = styled.section`\n  display: grid;\n  grid-template-rows: 150px auto;\n\n  @media ${device.tablet} {\n    grid-template-columns: repeat(2, 50%);\n    grid-template-rows: none;\n    margin-top: ${rhythm(1.25)};\n  }\n`;\n\nconst PitchContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media ${device.tablet} {\n    display: block;\n    grid-row: 1;\n  }\n`;\n\nconst Greeting = styled.h1`\n  margin: ${rhythm(1 / 4)} 0;\n  margin-bottom: 0;\n\n  ${scale(0.25)}\n\n  @media ${device.tablet} {\n    ${scale(1)}\n  }\n`;\n\nconst SubTitle = styled.h4`\n  ${scale(-0.15)};\n  margin-top: 0;\n\n  @media ${device.tablet} {\n    margin-top: ${rhythm(1 / 4)};\n    ${scale(0.25)};\n\n    &:after {\n      margin: 20px 0;\n      content: \"\";\n      width: 50px;\n      border-bottom: 1px solid #ccc;\n      display: block;\n    }\n  }\n`;\n\nconst Description = styled.p`\n  ${scale(-0.3)};\n  text-align: center;\n\n  @media ${device.tablet} {\n    ${scale(0)};\n    text-align: inherit;\n  }\n`;\n\nconst StyledImage = styled(Image)`\n  margin-bottom: 0;\n  justify-self: center;\n  min-width: 150px;\n  min-height: 150px;\n  border-radius: 50%;\n\n  @media ${device.tablet} {\n    grid-row: auto;\n    justify-self: flex-end;\n  }\n`;\n\nexport default Intro;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, graphql } from \"gatsby\";\nimport Image, { FixedObject } from \"gatsby-image\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport { rhythm } from \"../../../../../utils/typography\";\nimport { device } from \"../../../../../styles/constants\";\n\ninterface ShowcasedPostCardProps {\n  title: string;\n  slug: string;\n  cover?: FixedObject;\n  description: string;\n  date: string;\n  timeToRead: number;\n  location: GatsbyLocation;\n}\n\nconst ShowcasedPostCard: React.FunctionComponent<ShowcasedPostCardProps> = ({\n  title,\n  slug,\n  cover,\n  description,\n  date,\n  timeToRead,\n  location,\n}): React.ReactElement => (\n  <Root>\n    <Link\n      aria-label={`Continue reading: ${title}`}\n      to={`/blog${slug}`}\n      state={{ prevPath: location.pathname }}\n    >\n      <Title>{title}</Title>\n      <Cover fixed={cover} />\n    </Link>\n\n    <ContentInfo>\n      {date} · {timeToRead} min read\n    </ContentInfo>\n\n    <Content\n      dangerouslySetInnerHTML={{\n        __html: description.slice(0, 160),\n      }}\n    />\n  </Root>\n);\n\nconst Root = styled.section`\n  margin-bottom: ${rhythm(0.5)};\n  transition: transform 0.5s ease;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  a {\n    box-shadow: none;\n  }\n\n  @media ${device.tablet} {\n    margin-bottom: ${rhythm(1)};\n  }\n`;\n\nconst Title = styled.h4`\n  margin: ${rhythm(0.4)} 0 ${rhythm(0.4)};\n  color: ${({ theme }) => theme.colors.accent};\n\n  @media ${device.tablet} {\n    height: ${rhythm(2)};\n    margin: ${rhythm(1.25)} 0 ${rhythm(0.1)};\n  }\n`;\n\nconst ContentInfo = styled.span`\n  font-style: italic;\n  font-size: ${rhythm(0.55)};\n  display: block;\n`;\n\nconst Content = styled.p`\n  margin: ${rhythm(2 / 6)} 0;\n\n  @media ${device.tablet} {\n    max-height: ${rhythm(5)};\n  }\n`;\n\nconst Cover = styled(Image)`\n  width: 100% !important;\n  height: 150px !important;\n\n  @media ${device.tablet} {\n    height: 100px !important;\n    display: block !important;\n    margin-bottom: 2px;\n  }\n`;\n\nexport const query = graphql`\n  fragment ShowcasedPostInformation on MarkdownRemark {\n    excerpt\n    fields {\n      slug\n    }\n    frontmatter {\n      date(formatString: \"MMMM DD, YYYY\")\n      title\n      featured\n      description\n      cover {\n        childImageSharp {\n          fixed(height: 512) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n    timeToRead\n  }\n`;\n\nexport default ShowcasedPostCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FixedObject } from \"gatsby-image\";\nimport { GatsbyLocation } from \"local-types\";\nimport { MarkdownRemarkEdge } from \"graphql-types\";\n\nimport ShowcasedPostCard from \"./ShowcasedPostCard\";\n\nimport { device } from \"../../../../styles/constants\";\nimport { rhythm } from \"../../../../utils/typography\";\n\ninterface ShowcasedPostsContainerProps {\n  location: GatsbyLocation;\n  title: string;\n  posts: MarkdownRemarkEdge[];\n}\n\nconst ShowcasedPostsContainer: React.FunctionComponent<\n  ShowcasedPostsContainerProps\n> = ({ location, title, posts }): React.ReactElement => (\n  <Root>\n    <Title aria-label={`${title} posts section`}>{title}</Title>\n\n    <PostsContainer>\n      {posts.map(\n        (post): React.ReactElement => (\n          <ShowcasedPostCard\n            key={post.node.fields.slug}\n            title={post.node.frontmatter.title}\n            description={post.node.frontmatter.description}\n            date={post.node.frontmatter.date}\n            slug={post.node.fields.slug}\n            cover={\n              post.node.frontmatter.cover.childImageSharp.fixed as FixedObject\n            }\n            timeToRead={post.node.timeToRead}\n            location={location}\n          />\n        )\n      )}\n    </PostsContainer>\n  </Root>\n);\n\nconst Root = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${rhythm(1)};\n\n  @media ${device.tablet} {\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  margin: ${rhythm(0.5)} 0;\n\n  @media ${device.tablet} {\n    margin: 0;\n  }\n`;\n\nconst PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 100%;\n  grid-template-rows: none;\n  justify-content: center;\n\n  @media ${device.tablet} {\n    grid-template-rows: minmax(100px, 100%);\n    grid-template-columns: repeat(3, 31%);\n    grid-gap: 3.5%;\n  }\n`;\n\nexport default ShowcasedPostsContainer;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyLocation } from \"local-types\";\nimport { Query } from \"graphql-types\";\n\nimport ShowcasedPostsContainer from \"./ShowcasedPostsContainer\";\n\ninterface HomeProps {\n  location: GatsbyLocation;\n}\n\nconst Home: React.FunctionComponent<HomeProps> = ({\n  location,\n}): React.ReactElement => {\n  const { allMarkdownRemark }: Query = useStaticQuery(\n    graphql`\n      query LatestPosts {\n        allMarkdownRemark(\n          filter: { frontmatter: { draft: { eq: false } } }\n          sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n          edges {\n            node {\n              ...ShowcasedPostInformation\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const latestPosts = allMarkdownRemark.edges.slice(0, 3);\n\n  const featuredPosts = allMarkdownRemark.edges\n    .filter(\n      p => !latestPosts.find(lp => lp.node.fields.slug === p.node.fields.slug)\n    )\n    .filter(p => p.node.frontmatter.featured)\n    .slice(0, 3);\n\n  return (\n    <>\n      <ShowcasedPostsContainer\n        location={location}\n        posts={latestPosts}\n        title=\"Latest Posts ⌛️\"\n      />\n      {featuredPosts.length > 0 && (\n        <ShowcasedPostsContainer\n          location={location}\n          posts={featuredPosts}\n          title=\"Featured Posts ✨\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport Intro from \"./Intro\";\nimport ShowcasedPosts from \"./ShowcasedPosts\";\n\ninterface HomeProps {\n  location: GatsbyLocation;\n}\n\nconst Home: React.FunctionComponent<HomeProps> = ({\n  location,\n}): React.ReactElement => (\n  <>\n    <Intro />\n    <ShowcasedPosts location={location} />\n  </>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { animated, config } from \"react-spring\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport Home from \"../components/Home\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport { useSiteMetadata, usePageTransitions } from \"../hooks\";\n\ninterface IndexProps {\n  location?: GatsbyLocation;\n}\n\nconst Index: React.FunctionComponent<IndexProps> = ({\n  location,\n}): React.ReactElement => {\n  const { title: siteTitle } = useSiteMetadata();\n\n  const transitions = usePageTransitions({\n    config: config.gentle,\n    translateX: -100,\n    location,\n  });\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      {transitions.map(({ props, key }) => (\n        <animated.div key={key} style={props}>\n          <Home location={location} />\n        </animated.div>\n      ))}\n    </Layout>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}