{"version":3,"file":"component---src-pages-blog-tsx-c0921cee98dda18b29be.js","mappings":"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","sources":["webpack://navdeep-personal-website/./src/components/Blog/PostCard/PostCard.tsx","webpack://navdeep-personal-website/./src/components/Layout/Author/Author.tsx","webpack://navdeep-personal-website/./src/components/Blog/Blog.tsx","webpack://navdeep-personal-website/./src/pages/blog.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport { rhythm } from \"../../../utils/typography\";\n\ninterface PostCardProps {\n  title: string;\n  slug: string;\n  description: string;\n  date: string;\n  timeToRead: number;\n  location: GatsbyLocation;\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({\n  title,\n  slug,\n  description,\n  date,\n  timeToRead,\n  location,\n}): React.ReactElement => (\n  <Root>\n    <Title>\n      <Link\n        aria-label={`Continue reading: ${title}`}\n        to={`/blog${slug}`}\n        state={{ prevPath: location.pathname }}\n      >\n        {title}\n      </Link>\n    </Title>\n    <ContentInfo>\n      {date} Â· {timeToRead} min read\n    </ContentInfo>\n    <Content\n      dangerouslySetInnerHTML={{\n        __html: description,\n      }}\n    />\n  </Root>\n);\n\nconst Root = styled.section`\n  margin-bottom: ${rhythm(1)};\n\n  a {\n    box-shadow: none;\n\tcolor:#be2727;\n  }\n`;\n\nconst Title = styled.h3`\n  margin: ${rhythm(1)} 0 0;\n`;\n\nconst ContentInfo = styled.span`\n  font-style: italic;\n  font-size: ${rhythm(0.6)};\n`;\n\nconst Content = styled.p`\n  margin: ${rhythm(2 / 6)} 0;\n`;\n\nexport default PostCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Image, { FixedObject } from \"gatsby-image\";\nimport { Link } from \"gatsby\";\n\nimport { rhythm } from \"../../../utils/typography\";\nimport { device } from \"../../../styles/constants\";\nimport { useSiteMetadata, useAvatar } from \"../../../hooks\";\n\nconst Author = (): React.ReactElement => {\n  const { author } = useSiteMetadata();\n  const avatar = useAvatar({ width: 50, height: 50 });\n\n  const avatarFixedImage: FixedObject = {\n    ...avatar.childImageSharp.fixed,\n    // need to set src and srcSet explicitly, otherwise there is a type conflict\n    src: avatar.childImageSharp.fixed.src,\n    srcSet: avatar.childImageSharp.fixed.srcSet,\n    width: 50,\n    height: 50,\n  };\n\n  return (\n    <Root>\n      <StyledImage fixed={avatarFixedImage} alt={author.name} />\n      <h5>\n        A practical blog about Technology, Coding, Habit Building, and much more.\n      </h5>\n    </Root>\n  );\n};\n\nconst Root = styled.section`\n  display: grid;\n  grid-template-columns: 50px auto;\n  grid-gap: ${rhythm(1)};\n  align-items: center;\n  margin-bottom: ${rhythm(1)};\n\n  h5 {\n    margin: 0;\n    line-height: 1.5;\n  }\n`;\n\nconst StyledImage = styled(Image)`\n  margin-bottom: 0;\n  justify-self: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n\n  @media ${device.tablet} {\n    grid-row: auto;\n    justify-self: flex-end;\n  }\n`;\n\nexport default Author;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyLocation } from \"local-types\";\nimport { MarkdownRemarkConnection } from \"graphql-types\";\n\nimport PostCard from \"./PostCard\";\nimport Author from \"../Layout/Author\";\nimport { rhythm } from \"../../utils/typography\";\n\ninterface BlogProps {\n  location: GatsbyLocation;\n}\n\nconst Blog: React.FunctionComponent<BlogProps> = ({\n  location,\n}): React.ReactElement => {\n  const data: {\n    allMarkdownRemark: MarkdownRemarkConnection;\n  } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        filter: { frontmatter: { draft: { eq: false } } }\n        sort: { fields: [frontmatter___date], order: DESC }\n      ) {\n        edges {\n          node {\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n            }\n            timeToRead\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Root>\n      <Author />\n\t  <br/>\n\t  <u><strong>Current Posts:</strong></u>\n      {posts.map(\n        ({ node }): React.ReactElement => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <PostCard\n              key={node.fields.slug}\n              title={title}\n              slug={node.fields.slug}\n              description={node.frontmatter.description || node.excerpt}\n              date={node.frontmatter.date}\n              timeToRead={node.timeToRead}\n              location={location}\n            />\n          );\n        }\n      )}\n\t  <hr/>\n\t  <u><strong>Planned Upcoming Posts:</strong></u>\n\t  <ul>\n\t\t<li>What all I did & learnt during Covid19 lockdown</li>\n\t  </ul>\n    </Root>\n  );\n};\n\nconst Root = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  max-width: ${rhythm(24)};\n`;\n\nexport default Blog;\n","import React from \"react\";\nimport { animated } from \"react-spring\";\nimport { GatsbyLocation } from \"local-types\";\n\nimport Layout from \"../components/Layout\";\nimport Blog from \"../components/Blog\";\nimport SEO from \"../components/Seo\";\nimport { useSiteMetadata, usePageTransitions } from \"../hooks\";\n\ninterface BlogIndexProps {\n  location: GatsbyLocation;\n}\n\nconst BlogIndex: React.FunctionComponent<BlogIndexProps> = ({\n  location,\n}): React.ReactElement => {\n  const { title: siteTitle } = useSiteMetadata();\n\n  const comingBack =\n    location.state && location.state.prevPath\n      ? Boolean(location.state.prevPath.match(/\\/blog\\/*/))\n      : false;\n\n  const transitions = usePageTransitions({\n    translateX: comingBack ? -100 : 100,\n    location,\n  });\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Blog\" />\n      {transitions.map(({ props, key }) => (\n        <animated.div key={key} style={props}>\n          <Blog location={location} />\n        </animated.div>\n      ))}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n"],"names":["Root","styled","section","withConfig","displayName","componentId","rhythm","Title","h3","ContentInfo","span","Content","p","_ref","title","slug","description","date","timeToRead","location","React","Link","to","state","prevPath","pathname","dangerouslySetInnerHTML","__html","StyledImage","Image","device","tablet","Author","author","useSiteMetadata","avatar","useAvatar","width","height","avatarFixedImage","childImageSharp","fixed","src","srcSet","alt","name","posts","useStaticQuery","allMarkdownRemark","edges","map","_ref2","node","frontmatter","fields","PostCard","key","excerpt","siteTitle","comingBack","Boolean","match","transitions","usePageTransitions","translateX","Layout","SEO","props","animated","div","style","Blog"],"sourceRoot":""}