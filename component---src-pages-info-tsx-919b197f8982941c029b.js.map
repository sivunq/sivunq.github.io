{"version":3,"file":"component---src-pages-info-tsx-919b197f8982941c029b.js","mappings":"iOAIA,MAuHMA,EAAOC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,aAAAC,YAAA,eAAVJ,CAAU,gDAGVK,EAAAA,EAAAA,IAAO,IAGdC,EAASN,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAVJ,CAAU,0CAENK,EAAAA,EAAAA,IAAO,IAGpBE,EAAQP,EAAAA,QAAOQ,GAAEN,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAATJ,CAAS,oEAGJK,EAAAA,EAAAA,IAAO,IAIpBI,EAAWT,EAAAA,QAAOU,EAACR,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAARJ,CAAQ,2CAMnBW,EAAUX,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAVJ,CAAU,iDAGjBK,EAAAA,EAAAA,IAAO,IAGVO,EAAUZ,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAVJ,CAAU,wBACPK,EAAAA,EAAAA,IAAO,IAGpBQ,EAAeb,EAAAA,QAAOc,GAAEZ,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAATJ,CAAS,uHAGXK,EAAAA,EAAAA,IAAO,IAGNA,EAAAA,EAAAA,IAAO,KAGrBU,EAAcf,EAAAA,QAAOU,EAACR,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAARJ,CAAQ,4EAQ5B,MA1KagB,IAETC,EAAAA,cAAClB,EAAI,KACHkB,EAAAA,cAACX,EAAM,KACLW,EAAAA,cAACV,EAAK,KAAC,YACPU,EAAAA,cAACR,EAAQ,KAAC,0BAGZQ,EAAAA,cAACN,EAAO,KACNM,EAAAA,cAACL,EAAO,KACNK,EAAAA,cAACJ,EAAY,KAAC,kBACdI,EAAAA,cAACF,EAAW,KAAC,qDAEXE,EAAAA,cAAA,WAAM,6EAGNA,EAAAA,cAAA,WAAM,kCAENA,EAAAA,cAAA,WAAM,qDAENA,EAAAA,cAAA,WAAM,+CAENA,EAAAA,cAAA,WAAM,wBAENA,EAAAA,cAAA,WAAM,8DAENA,EAAAA,cAAA,WAAM,gDAENA,EAAAA,cAAA,WAAM,qCAENA,EAAAA,cAAA,WAAM,+BAKVA,EAAAA,cAACL,EAAO,KACNK,EAAAA,cAACJ,EAAY,KAAC,kBACdI,EAAAA,cAACF,EAAW,KAAC,+BAEXE,EAAAA,cAAA,WAAM,+EAGNA,EAAAA,cAAA,WAAM,0CAENA,EAAAA,cAAA,WAAM,oBAKVA,EAAAA,cAACL,EAAO,KACNK,EAAAA,cAACJ,EAAY,KAAC,cACdI,EAAAA,cAACF,EAAW,KAAC,wDAEXE,EAAAA,cAAA,WAAM,iDAENA,EAAAA,cAAA,WAAM,iDAENA,EAAAA,cAAA,WAAM,kFAMVA,EAAAA,cAACL,EAAO,KACNK,EAAAA,cAACJ,EAAY,KAAC,uBACdI,EAAAA,cAACF,EAAW,KAAC,eAEXE,EAAAA,cAAA,WAAM,wDAENA,EAAAA,cAAA,WAAM,oCAENA,EAAAA,cAAA,WAAM,yCAENA,EAAAA,cAAA,WAAM,8CAENA,EAAAA,cAAA,WAAM,uCAENA,EAAAA,cAAA,WAAM,yDAENA,EAAAA,cAAA,WAAM,6DAENA,EAAAA,cAAA,WAAM,qCAENA,EAAAA,cAAA,WAAM,4CAENA,EAAAA,cAAA,WAAM,wBAENA,EAAAA,cAAA,WAAM,kCAKVA,EAAAA,cAACL,EAAO,KACNK,EAAAA,cAACJ,EAAY,KAAC,YACdI,EAAAA,cAACF,EAAW,KAAC,6BAEXE,EAAAA,cAAA,WAAM,2BAENA,EAAAA,cAAA,WAAM,wCAKVA,EAAAA,cAACL,EAAO,KACNK,EAAAA,cAACJ,EAAY,KAAC,mBACdI,EAAAA,cAACF,EAAW,KAAC,4CAEXE,EAAAA,cAAA,WAAM,gFAGNA,EAAAA,cAAA,WAAM,2B,8BClHlB,MAAMC,EAAQC,EAAQ,MAWhBC,EAAiBpB,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,0FAQ3BqB,EAAYrB,EAAAA,QAAOsB,KAAIpB,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAXJ,CAAW,6NAqBvBuB,EAAavB,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAVJ,CAAU,iDAMvBwB,EAAaxB,EAAAA,QAAOyB,MAAKvB,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAZJ,CAAY,oMAkBzB0B,EAAe1B,EAAAA,QAAO2B,OAAMzB,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAbJ,CAAa,8OAoB5B4B,EAAe5B,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,mIAkG/B,MAtEyD6B,IAE9B,IAF+B,SACxDC,GACDD,EACC,MAAQE,MAAOC,EAAS,OAAEC,IAAWC,EAAAA,EAAAA,OAC/B,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,KAC7B,EAACC,EAAW,EAACC,IAAiBF,EAAAA,EAAAA,WAAS,IACvC,EAACG,EAAU,EAACC,IAAgBJ,EAAAA,EAAAA,WAAS,IACrC,EAACK,EAAa,EAACC,IAAmBN,EAAAA,EAAAA,UAAS,IAE3CO,GAAcC,EAAAA,EAAAA,IAAmB,CAAEf,aAEnCgB,EAAqBC,IAEzB,GADAA,EAAEC,kBACGb,EAAMc,OAGT,OAFAN,EAAgB,6BAChBF,GAAa,GAIf,MAAMS,EApCV,SAAqBf,GACnB,IACE,MAAMgB,EACJ,2HAGF,OAFajC,EAAMkC,KAAKD,GAEZE,OAAOlB,EACrB,CAAE,MAAOmB,GAEP,OADAC,QAAQD,MAAM,4BAA6BA,IACpC,CACT,CACF,CAyBoBE,CAAYrB,GACxBe,GACFX,GAAc,GACdE,GAAa,KAEbE,EAAgB,oCAChBF,GAAa,KAIXgB,EAAqBV,IACzBX,EAASW,EAAEW,OAAOC,OACdnB,GACFC,GAAa,IAIjB,OACExB,EAAAA,cAAC2C,EAAAA,EAAM,CAAC9B,SAAUA,EAAUC,MAAOC,GACjCf,EAAAA,cAAC4C,EAAAA,EAAG,CAAC9B,MAAM,oBACVa,EAAYkB,IAAIC,IAAA,IAAC,MAAEC,EAAK,IAAEC,GAAKF,EAAA,OAC9B9C,EAAAA,cAACiD,EAAAA,GAASjE,IAAG,CAACgE,IAAKA,EAAKE,MAAOH,GAC3B1B,EAqBArB,EAAAA,cAACD,EAAI,MApBLC,EAAAA,cAACG,EAAc,KACbH,EAAAA,cAACI,EAAS,CAAC+C,SAAUtB,GACnB7B,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,SAAG,kEAGHA,EAAAA,cAACM,EAAU,KACTN,EAAAA,cAACO,EAAU,CACT6C,KAAK,OACLV,MAAOxB,EACPmC,SAAUb,EACVc,YAAY,sBACZC,WAAS,IAEXvD,EAAAA,cAACS,EAAY,CAAC2C,KAAK,UAAS,WAE7B7B,GAAavB,EAAAA,cAACW,EAAY,KAAEc,S","sources":["webpack://navdeep-personal-website/./src/components/Info/Info.tsx","webpack://navdeep-personal-website/./src/pages/info.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { rhythm } from \"../../utils/typography\";\n\nconst Info = (): React.ReactElement => {\n  return (\n    <Root>\n      <Header>\n        <Title>About Me</Title>\n        <Subtitle>Get to know me better</Subtitle>\n      </Header>\n\n      <Content>\n        <Section>\n          <SectionTitle>üë§ Personality</SectionTitle>\n          <SectionText>\n            Most of the time I'm fun & serious when I have to.\n            <br />\n            My friends say I'm funny, resourceful, dependable, trustworthy, and\n            smart.\n            <br />\n            Will plan, empathize & discuss.\n            <br />\n            Well dressed, have a beautiful smile & nice beard.\n            <br />\n            Good sense of humor (witty & slightly dark).\n            <br />\n            Kind of minimalistic.\n            <br />\n            Quite a fighter, won't give up unless I have given my best.\n            <br />\n            Absolutely no health issues, mentally stable.\n            <br />\n            I learned the art of being myself.\n            <br />\n            Old school. Desi at heart.\n          </SectionText>\n        </Section>\n\n        <Section>\n          <SectionTitle>ü§ù Social Life</SectionTitle>\n          <SectionText>\n            I have friends, not a loner!\n            <br />\n            Good with people & comfortable in social situations, able to talk to\n            anyone.\n            <br />\n            People close to me perceive me as cute.\n            <br />\n            Good with kids.\n          </SectionText>\n        </Section>\n\n        <Section>\n          <SectionTitle>üéØ Hobbies</SectionTitle>\n          <SectionText>\n            I like to watch interesting content & read sometimes.\n            <br />\n            Travelling, music, working out get me going...\n            <br />\n            Horror, mystery, true stories are my favorite.\n            <br />\n            Kind of bob the builder, can fix stuff on my own, so you don't have\n            to worry.\n          </SectionText>\n        </Section>\n\n        <Section>\n          <SectionTitle>üíù Benefits for You</SectionTitle>\n          <SectionText>\n            I'll listen.\n            <br />\n            You will feel protected, comfortable & loved with me.\n            <br />\n            You will be the good looking one.\n            <br />\n            Lots of travelling, treks, long walks.\n            <br />\n            I'll always have your back, no matter what.\n            <br />\n            Will always be there to support you.\n            <br />\n            Won't have money issues, I'm financially aware/stable.\n            <br />\n            Will validate your emotions, won't just respond logically.\n            <br />\n            Your secrets will be safe with me.\n            <br />\n            Will make soup for you when you are sick.\n            <br />\n            Professional cuddler.\n            <br />\n            Will send cute & funny reels.\n          </SectionText>\n        </Section>\n\n        <Section>\n          <SectionTitle>‚ú® Extras</SectionTitle>\n          <SectionText>\n            I love dogs, cats & goats.\n            <br />\n            Chews with mouth closed.\n            <br />\n            Even my ex gave me a 7.5/10 rating.\n          </SectionText>\n        </Section>\n\n        <Section>\n          <SectionTitle>üöÄ Future Plans</SectionTitle>\n          <SectionText>\n            Build a beautiful family & life together.\n            <br />\n            We both are protagonists in our own lives, I'm looking for an epic\n            crossover.\n            <br />\n            Let's go for a walk!\n          </SectionText>\n        </Section>\n      </Content>\n    </Root>\n  );\n};\n\nconst Root = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: ${rhythm(2)};\n`;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: ${rhythm(3)};\n`;\n\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: ${rhythm(1)};\n  font-weight: 700;\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1.2rem;\n  color: #666;\n  margin: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${rhythm(3)};\n`;\n\nconst Section = styled.div`\n  margin-bottom: ${rhythm(2)};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.6rem;\n  color: #333;\n  margin-bottom: ${rhythm(1)};\n  font-weight: 600;\n  border-bottom: 2px solid #be2727;\n  padding-bottom: ${rhythm(0.5)};\n`;\n\nconst SectionText = styled.p`\n  color: #555;\n  line-height: 1.8;\n  font-size: 1rem;\n  margin: 0;\n  text-align: justify;\n`;\n\nexport default Info;\n","const jsotp = require(\"jsotp\");\nimport { GatsbyLocation } from \"local-types\";\nimport React, { useState } from \"react\";\nimport { animated } from \"react-spring\";\nimport styled from \"styled-components\";\nimport Info from \"../components/Info\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport { usePageTransitions, useSiteMetadata } from \"../hooks\";\n\n// Styled Components\nconst TokenContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 60vh;\n  padding: 2rem;\n`;\n\nconst TokenForm = styled.form`\n  background: white;\n  padding: 3rem;\n  border-radius: 12px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  max-width: 400px;\n  width: 100%;\n\n  h2 {\n    margin-bottom: 1rem;\n    color: #333;\n  }\n\n  p {\n    margin-bottom: 2rem;\n    color: #666;\n    line-height: 1.5;\n  }\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n\nconst TokenInput = styled.input`\n  flex: 1;\n  padding: 0.75rem 1rem;\n  border: 2px solid #e1e5e9;\n  border-radius: 8px;\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  padding: 0.75rem 1.5rem;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background: #0056b3;\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background: #f8d7da;\n  color: #721c24;\n  padding: 0.75rem;\n  border-radius: 6px;\n  border: 1px solid #f5c6cb;\n  font-size: 0.9rem;\n  margin-top: 1rem;\n`;\n\n// TOTP verification using jsotp\nfunction verifyToken(token: string): boolean {\n  try {\n    const secret =\n      \"MJRDCYJWGBRDGYZVG4ZWINBRGA3GMYZUMQYDIOBYGRRGINBTGY2WKNRRG44DONZXHFTDEMDGMRTDIMRVGA3DGMBWMU3TAZDBGI2TINBXGFTGKNZSHE2Q====\";\n    const totp = jsotp.TOTP(secret);\n\n    return totp.verify(token);\n  } catch (error) {\n    console.error(\"Token verification error:\", error);\n    return false;\n  }\n}\n\ninterface InfoPageProps {\n  location: GatsbyLocation;\n}\n\nconst InfoPage: React.FunctionComponent<InfoPageProps> = ({\n  location,\n}): React.ReactElement => {\n  const { title: siteTitle, author } = useSiteMetadata();\n  const [token, setToken] = useState(\"\");\n  const [isVerified, setIsVerified] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const transitions = usePageTransitions({ location });\n\n  const handleTokenSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!token.trim()) {\n      setErrorMessage(\"Please enter a token\");\n      setShowError(true);\n      return;\n    }\n\n    const isValid = verifyToken(token);\n    if (isValid) {\n      setIsVerified(true);\n      setShowError(false);\n    } else {\n      setErrorMessage(\"Invalid token. Please try again.\");\n      setShowError(true);\n    }\n  };\n\n  const handleTokenChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setToken(e.target.value);\n    if (showError) {\n      setShowError(false);\n    }\n  };\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Amazing Navdeep\" />\n      {transitions.map(({ props, key }) => (\n        <animated.div key={key} style={props}>\n          {!isVerified ? (\n            <TokenContainer>\n              <TokenForm onSubmit={handleTokenSubmit}>\n                <h2>Enter Access Token</h2>\n                <p>\n                  Please enter your authentication token to access this content.\n                </p>\n                <InputGroup>\n                  <TokenInput\n                    type=\"text\"\n                    value={token}\n                    onChange={handleTokenChange}\n                    placeholder=\"Enter token here...\"\n                    autoFocus\n                  />\n                  <SubmitButton type=\"submit\">Verify</SubmitButton>\n                </InputGroup>\n                {showError && <ErrorMessage>{errorMessage}</ErrorMessage>}\n              </TokenForm>\n            </TokenContainer>\n          ) : (\n            <Info />\n          )}\n        </animated.div>\n      ))}\n    </Layout>\n  );\n};\n\nexport default InfoPage;\n"],"names":["Root","styled","div","withConfig","displayName","componentId","rhythm","Header","Title","h1","Subtitle","p","Content","Section","SectionTitle","h2","SectionText","Info","React","jsotp","require","TokenContainer","TokenForm","form","InputGroup","TokenInput","input","SubmitButton","button","ErrorMessage","_ref","location","title","siteTitle","author","useSiteMetadata","token","setToken","useState","isVerified","setIsVerified","showError","setShowError","errorMessage","setErrorMessage","transitions","usePageTransitions","handleTokenSubmit","e","preventDefault","trim","isValid","secret","TOTP","verify","error","console","verifyToken","handleTokenChange","target","value","Layout","SEO","map","_ref2","props","key","animated","style","onSubmit","type","onChange","placeholder","autoFocus"],"sourceRoot":""}